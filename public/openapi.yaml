openapi: 3.0.3
info:
  title: BRIXTA Salesman Management API
  description: API for managing users, companies, dealers, and daily visit reports for the BRIXTA application.
  version: 1.0.0
servers:
  - url: https://myserverbymycoco.onrender.com
paths:
  # ---------------- USERS ----------------
  /api/users:
    get:
      summary: Get all users with optional filters
      description: Fetches a list of all users, allowing for filtering by role, region, area, status, company, and a general search term for name/email.
      parameters:
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
          description: Maximum number of users to return.
        - name: role
          in: query
          schema: 
            type: string
          description: Filter users by their role (e.g., 'salesman', 'manager').
        - name: region
          in: query
          schema: 
            type: string
          description: Filter users by their assigned region.
        - name: area
          in: query
          schema: 
            type: string
          description: Filter users by their assigned area.
        - name: status
          in: query
          schema: 
            type: string
          description: Filter users by their status (e.g., 'active', 'inactive').
        - name: companyId
          in: query
          schema: 
            type: integer
          description: Filter users by their company ID.
        - name: search
          in: query
          schema: 
            type: string
          description: Search for users by a partial match on their email.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/users/{id}:
    get:
      summary: Get a user by ID
      description: Retrieves a single user by their unique numeric ID.
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
          description: The ID of the user to retrieve.
      responses:
        '200':
          description: The requested user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/company/{companyId}:
    get:
      summary: Get users by company ID
      description: Fetches a list of users belonging to a specific company, with additional filtering options.
      parameters:
        - name: companyId
          in: path
          required: true
          schema: 
            type: integer
          description: The ID of the company.
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: role
          in: query
          schema: 
            type: string
        - name: region
          in: query
          schema: 
            type: string
        - name: area
          in: query
          schema: 
            type: string
        - name: status
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of users for the specified company.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/users/role/{role}:
    get:
      summary: Get users by role
      description: Fetches a list of users with a specific role, with additional filtering options.
      parameters:
        - name: role
          in: path
          required: true
          schema: 
            type: string
          description: The role to filter by.
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: companyId
          in: query
          schema: 
            type: integer
        - name: region
          in: query
          schema: 
            type: string
        - name: area
          in: query
          schema: 
            type: string
        - name: status
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of users with the specified role.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/users/region/{region}:
    get:
      summary: Get users by region
      description: Fetches a list of users in a specific region, with additional filtering options.
      parameters:
        - name: region
          in: path
          required: true
          schema: 
            type: string
          description: The region to filter by.
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: companyId
          in: query
          schema: 
            type: integer
        - name: role
          in: query
          schema: 
            type: string
        - name: area
          in: query
          schema: 
            type: string
        - name: status
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of users in the specified region.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  # ---------------- COMPANIES ----------------
  /api/companies:
    get:
      summary: Get all companies
      description: Fetches a list of all companies, with optional filtering by region and area.
      parameters:
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: region
          in: query
          schema: 
            type: string
        - name: area
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of companies.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
  /api/companies/{id}:
    get:
      summary: Get a company by ID
      description: Retrieves a single company by its unique numeric ID.
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: The requested company object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
  /api/companies/region/{region}:
    get:
      summary: Get companies by region
      description: Fetches a list of companies in a specific region.
      parameters:
        - name: region
          in: path
          required: true
          schema: 
            type: string
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: area
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of companies in the specified region.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
  # ---------------- DEALERS ----------------
  /api/dealers:
    get:
      summary: Get all dealers
      description: Fetches a list of all dealers, with optional filtering.
      parameters:
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: region
          in: query
          schema: 
            type: string
        - name: area
          in: query
          schema: 
            type: string
        - name: type
          in: query
          schema: 
            type: string
          description: Filter dealers by type.
        - name: userId
          in: query
          schema: 
            type: integer
          description: Filter dealers assigned to a specific user.
      responses:
        '200':
          description: A list of dealers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dealer'
  /api/dealers/{id}:
    get:
      summary: Get a dealer by ID
      description: Retrieves a single dealer by its unique numeric ID.
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: The requested dealer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
  /api/dealers/user/{userId}:
    get:
      summary: Get dealers by user ID
      description: Fetches a list of dealers assigned to a specific user.
      parameters:
        - name: userId
          in: path
          required: true
          schema: 
            type: integer
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: region
          in: query
          schema: 
            type: string
        - name: area
          in: query
          schema: 
            type: string
        - name: type
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of dealers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dealer'
  # ---------------- DAILY VISIT REPORTS ----------------
  /api/daily-visit-reports:
    get:
      summary: Get all daily visit reports
      description: Fetches a list of daily visit reports, with powerful date and property filtering.
      parameters:
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: startDate
          in: query
          schema: 
            type: string
            format: date
          description: The start date for the report range (e.g., YYYY-MM-DD).
        - name: endDate
          in: query
          schema: 
            type: string
            format: date
          description: The end date for the report range (e.g., YYYY-MM-DD).
        - name: userId
          in: query
          schema: 
            type: integer
        - name: dealerType
          in: query
          schema: 
            type: string
        - name: visitType
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of daily visit reports.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyVisitReport'
    post:
      summary: Create a new daily visit report
      description: Submits a new daily visit report. The server performs strict validation against the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDailyVisitReport'
      responses:
        '201':
          description: Report created successfully. Returns the new report object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyVisitReport'
        '400':
          description: Validation failed. The request body is invalid.
  /api/daily-visit-reports/{id}:
    get:
      summary: Get a daily visit report by ID
      description: Retrieves a single daily visit report by its unique ID.
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: The requested report object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyVisitReport'
  /api/daily-visit-reports/user/{userId}:
    get:
      summary: Get daily visit reports by user ID
      description: Fetches a list of daily visit reports for a specific user.
      parameters:
        - name: userId
          in: path
          required: true
          schema: 
            type: integer
        - name: limit
          in: query
          schema: 
            type: integer
            default: 50
        - name: startDate
          in: query
          schema: 
            type: string
            format: date
        - name: endDate
          in: query
          schema: 
            type: string
            format: date
        - name: dealerType
          in: query
          schema: 
            type: string
        - name: visitType
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: A list of reports for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyVisitReport'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: 'user@example.com'
        firstName:
          type: string
          example: 'John'
        lastName:
          type: string
          example: 'Doe'
        role:
          type: string
          example: 'salesman'
        phoneNumber:
          type: string
          example: '1234567890'
        region:
          type: string
          example: 'North'
        area:
          type: string
          example: 'Guwahati'
        salesmanLoginId:
          type: string
          nullable: true
        status:
          type: string
          example: 'active'
        companyId:
          type: integer
          example: 101
        reportsToId:
          type: integer
          nullable: true
          example: 5
        createdAt:
          type: string
          format: 'date-time'
        updatedAt:
          type: string
          format: 'date-time'
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 101
        companyName:
          type: string
          example: 'BRIXTA Inc.'
        officeAddress:
          type: string
          example: '123 Main St, Guwahati'
        isHeadOffice:
          type: boolean
          example: true
        phoneNumber:
          type: string
          example: '0987654321'
        region:
          type: string
          example: 'North'
        area:
          type: string
          example: 'Guwahati'
        adminUserId:
          type: integer
          example: 1
        createdAt:
          type: string
          format: 'date-time'
        updatedAt:
          type: string
          format: 'date-time'
        workosOrganizationId:
          type: string
          nullable: true
    Dealer:
      type: object
      properties:
        id:
          type: string
          example: 'DEALER-001'
        dealerName:
          type: string
          example: 'ABC Hardware'
        address:
          type: string
          example: '456 Market Rd'
        region:
          type: string
          example: 'North'
        area:
          type: string
          example: 'Guwahati'
        type:
          type: string
          example: 'Retail'
        userId:
          type: integer
          example: 2
        createdAt:
          type: string
          format: 'date-time'
        updatedAt:
          type: string
          format: 'date-time'
    DailyVisitReport:
      type: object
      properties:
        id:
          type: string
          example: 'DVR-2025-001'
        reportDate:
          type: string
          format: date
        dealerId:
          type: string
          example: 'DEALER-001'
        dealerType:
          type: string
          example: 'Retail'
        visitType:
          type: string
          example: 'Sales'
        personMet:
          type: string
          example: 'Mr. Sharma'
        discussionPoint:
          type: string
          example: 'Discussed new product line.'
        outcome:
          type: string
          example: 'Positive feedback, potential order next week.'
        userId:
          type: integer
          example: 2
        createdAt:
          type: string
          format: 'date-time'
        updatedAt:
          type: string
          format: 'date-time'
    NewDailyVisitReport:
      type: object
      required:
        - userId
        - reportDate
        - dealerType
        - location
        - latitude
        - longitude
        - visitType
        - dealerTotalPotential
        - dealerBestPotential
        - brandSelling
        - todayOrderMt
        - todayCollectionRupees
        - feedbacks
        - checkInTime
      properties:
        userId:
          type: integer
          description: "ID of the user filing the report."
        reportDate:
          type: string
          format: date
          description: "Date of the visit (YYYY-MM-DD)."
        dealerType:
          type: string
          maxLength: 50
        dealerName:
          type: string
          maxLength: 255
          nullable: true
        subDealerName:
          type: string
          maxLength: 255
          nullable: true
        location:
          type: string
          maxLength: 500
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        visitType:
          type: string
          maxLength: 50
        dealerTotalPotential:
          type: number
          format: double
          description: "Total potential business from the dealer."
        dealerBestPotential:
          type: number
          format: double
          description: "Best potential business from the dealer."
        brandSelling:
          type: array
          items:
            type: string
          minItems: 1
          description: "List of brands the dealer sells."
        contactPerson:
          type: string
          maxLength: 255
          nullable: true
        contactPersonPhoneNo:
          type: string
          maxLength: 20
          nullable: true
        todayOrderMt:
          type: number
          format: double
          description: "Order amount in Metric Tons for today."
        todayCollectionRupees:
          type: number
          format: double
          description: "Collection amount in Rupees for today."
        overdueAmount:
          type: number
          format: double
          nullable: true
        feedbacks:
          type: string
          maxLength: 500
          description: "General feedback from the visit."
        solutionBySalesperson:
          type: string
          maxLength: 500
          nullable: true
        anyRemarks:
          type: string
          maxLength: 500
          nullable: true
        checkInTime:
          type: string
          format: "date-time"
        checkOutTime:
          type: string
          format: "date-time"
          nullable: true
        inTimeImageUrl:
          type: string
          maxLength: 500
          nullable: true
        outTimeImageUrl:
          type: string
          maxLength: 500
          nullable: true